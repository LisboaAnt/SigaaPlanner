-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.academico
(
    idusuario integer,
    ira numeric,
    matricula character varying(20) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.amizade
(
    idusuario1 integer,
    idusuario2 integer
);

CREATE TABLE IF NOT EXISTS public.anotacao
(
    idanotacao integer NOT NULL DEFAULT nextval('anotacao_idanotacao_seq'::regclass),
    titulo character varying(255) COLLATE pg_catalog."default",
    texto text COLLATE pg_catalog."default",
    CONSTRAINT anotacao_pkey PRIMARY KEY (idanotacao)
);

CREATE TABLE IF NOT EXISTS public.atividades
(
    idatividade integer NOT NULL DEFAULT nextval('atividades_idatividade_seq'::regclass),
    idusuario integer,
    tipo character varying(50) COLLATE pg_catalog."default",
    titulo character varying(255) COLLATE pg_catalog."default",
    allday boolean,
    descricao text COLLATE pg_catalog."default",
    data date,
    cor character varying(20) COLLATE pg_catalog."default",
    data_end date,
    CONSTRAINT atividades_pkey PRIMARY KEY (idatividade)
);

CREATE TABLE IF NOT EXISTS public.disciplina
(
    iddisciplina integer NOT NULL DEFAULT nextval('disciplina_iddisciplina_seq'::regclass),
    idusuario integer,
    idprofessor integer,
    horario character varying(255) COLLATE pg_catalog."default",
    nome character varying(255) COLLATE pg_catalog."default",
    local character varying(255) COLLATE pg_catalog."default",
    codigo character varying(10) COLLATE pg_catalog."default",
    descricao text COLLATE pg_catalog."default",
    CONSTRAINT disciplina_pkey PRIMARY KEY (iddisciplina)
);

CREATE TABLE IF NOT EXISTS public.escreve
(
    idanotacao integer,
    idusuario integer,
    data date
);

CREATE TABLE IF NOT EXISTS public.nota
(
    idnota integer NOT NULL DEFAULT nextval('nota_idnota_seq'::regclass),
    iddisciplina integer,
    tipo character varying(50) COLLATE pg_catalog."default",
    data date,
    nome character varying(255) COLLATE pg_catalog."default",
    nota numeric,
    CONSTRAINT nota_pkey PRIMARY KEY (idnota)
);

CREATE TABLE IF NOT EXISTS public.professor
(
    idprofessor integer NOT NULL DEFAULT nextval('professor_idprofessor_seq'::regclass),
    nome character varying(255) COLLATE pg_catalog."default",
    telefone character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT professor_pkey PRIMARY KEY (idprofessor)
);

CREATE TABLE IF NOT EXISTS public.usuario
(
    idusuario integer NOT NULL DEFAULT nextval('usuario_idusuario_seq'::regclass),
    senha character varying(255) COLLATE pg_catalog."default",
    nome character varying(255) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    telefone1 character varying(20) COLLATE pg_catalog."default",
    telefone2 character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT usuario_pkey PRIMARY KEY (idusuario)
);

ALTER TABLE IF EXISTS public.academico
    ADD CONSTRAINT academico_idusuario_fkey FOREIGN KEY (idusuario)
    REFERENCES public.usuario (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.amizade
    ADD CONSTRAINT amizade_idusuario1_fkey FOREIGN KEY (idusuario1)
    REFERENCES public.usuario (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.amizade
    ADD CONSTRAINT amizade_idusuario2_fkey FOREIGN KEY (idusuario2)
    REFERENCES public.usuario (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.atividades
    ADD CONSTRAINT atividades_idusuario_fkey FOREIGN KEY (idusuario)
    REFERENCES public.usuario (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.disciplina
    ADD CONSTRAINT disciplina_idprofessor_fkey FOREIGN KEY (idprofessor)
    REFERENCES public.professor (idprofessor) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.disciplina
    ADD CONSTRAINT disciplina_idusuario_fkey FOREIGN KEY (idusuario)
    REFERENCES public.usuario (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.escreve
    ADD CONSTRAINT escreve_idanotacao_fkey FOREIGN KEY (idanotacao)
    REFERENCES public.anotacao (idanotacao) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.escreve
    ADD CONSTRAINT escreve_idusuario_fkey FOREIGN KEY (idusuario)
    REFERENCES public.usuario (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.nota
    ADD CONSTRAINT nota_iddisciplina_fkey FOREIGN KEY (iddisciplina)
    REFERENCES public.disciplina (iddisciplina) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;